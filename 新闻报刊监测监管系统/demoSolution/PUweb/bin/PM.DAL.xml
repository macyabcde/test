<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PM.DAL</name>
    </assembly>
    <members>
        <member name="T:PM.DAL.DAL_PropertyB">
            <summary>
            属性特征配置表访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.#ctor">
            <summary>
            属性特征配置表访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.GetModel(System.Int32)">
            <summary>
            获取一个属性特征配置实体
            </summary>
            <param name="PropertyID">属性特征ID</param>
            <returns>一个属性特征配置实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.GetList(System.String)">
            <summary>
            获取属性特征配置列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>属性特征配置列表</returns>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.Add(PM.Model.MDL_PropertyB)">
            <summary>
            添加属性特征配置
            </summary>
            <param name="model">任务信息类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.Update(PM.Model.MDL_PropertyB)">
            <summary>
            修改属性特征配置,返回所影响的行数
            </summary>
            <param name="model">属性特征配置类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.Delete(System.Int32)">
            <summary>
            删除属性特征配置
            </summary>
            <param name="PropertyID">属性特征ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_PropertyB.GetPropertyID(System.Int32)">
            <summary>
            根据报纸ID获取属性特征ID
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>属性特征ID</returns>
        </member>
        <member name="M:PM.DAL.DAL_DynamicMonitoring.ExcuteSqlReturnInt(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行insert/update/delete sql语句或者存储过程
            </summary>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="type">命令类型 sql语句还是存储过程</param>
            <param name="pars">参数</param>
            <returns>int</returns>
        </member>
        <member name="M:PM.DAL.DAL_DynamicMonitoring.SelectSqlReturnObject(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询 sql语句或者存储过程 返回一个对象（一条记录）
            </summary>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="type">命令类型 sql语句还是存储过程</param>
            <param name="pars">参数</param>
            <returns>object</returns>
        </member>
        <member name="M:PM.DAL.DAL_DynamicMonitoring.GetDataTable(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            查询多个字段返回一个DataTable
            </summary>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="T:PM.DAL.DAL_BCMonitoring">
            <summary>
            版次检测服务的数据库操作类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_BCMonitoring.ExcuteSqlReturnInt(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行insert/update/delete sql语句或者存储过程
            </summary>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="type">命令类型 sql语句还是存储过程</param>
            <param name="pars">参数</param>
            <returns>int</returns>
        </member>
        <member name="M:PM.DAL.DAL_BCMonitoring.SelectSqlReturnObject(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询 sql语句或者存储过程 返回一个对象（一条记录）
            </summary>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="type">命令类型 sql语句还是存储过程</param>
            <param name="pars">参数</param>
            <returns>object</returns>
        </member>
        <member name="T:PM.DAL.DAL_databaseServerB">
            <summary>
            数据库服务器数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.#ctor">
            <summary>
            数据库服务器数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.Getdatabase">
            <summary>
            返回数据库服务器名称
            </summary>
            <returns>数据库服务器名称</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.GetModel(System.Int32)">
            <summary>
            获取一个数据库服务器实体
            </summary>
            <param name="databaseServerID">数据库服务器ID</param>
            <returns>数据库服务器实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.Add(PM.Model.MDL_databaseServerB)">
            <summary>
            添加数据库服务器,返回所影响的行
            </summary>
            <param name="model">数据库服务器实体类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.Update(PM.Model.MDL_databaseServerB)">
            <summary>
            修改数据库服务器,返回所影响的行
            </summary>
            <param name="model">数据库服务器实体类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.Delete(System.Int32)">
            <summary>
            删除数据库服务器
            </summary>
            <param name="databaseServerID">数据库服务器ID</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.CheckName(System.String)">
            <summary>
            根据数据库名称返回实体
            </summary>
            <param name="serverName">服务器名称</param>
            <returns>数据库服务器实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.HasserverName(System.Int32,System.String)">
            <summary>
            检测是否已存在数据库名称
            </summary>
            <param name="databaseServerID">数据库服务器ID</param>
            <param name="serverName">服务器名称</param>
            <returns>true存在,false不存在</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseServerB.Hasdatabase(System.Int32)">
            <summary>
            检测该服务器是否有数据库
            </summary>
            <param name="databaseServerID">数据库服务器ID</param>
            <returns>true存在,false不存在</returns>
        </member>
        <member name="T:PM.DAL.DAL_taskInfoB">
            <summary>
            任务信息表访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.#ctor">
            <summary>
            任务信息表访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.GetModel(System.Int32)">
            <summary>
            获取一个任务信息表实体
            </summary>
            <param name="taskInfID">任务信息ID</param>
            <returns>一个任务信息表实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.GetList(System.String)">
            <summary>
            获取任务信息列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>任务信息列表</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.Add(PM.Model.MDL_taskInfoB)">
            <summary>
            添加任务信息列表
            </summary>
            <param name="model">任务信息类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.Update(PM.Model.MDL_taskInfoB)">
            <summary>
            修改任务信息,返回所影响的行数
            </summary>
            <param name="model">任务信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.Delete(System.Int32)">
            <summary>
            删除任务信息
            </summary>
            <param name="taskInfID">任务信息ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.UpdateCookie(System.Int32,System.String)">
            <summary>
            修改Cookie值,返回所影响的行数
            </summary>
            <param name="paperID">报纸ID</param>
            <param name="CookieValue">Cookie值</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.GetCookie(System.Int32)">
            <summary>
            获取Cookie值
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>Cookie值</returns>
        </member>
        <member name="M:PM.DAL.DAL_taskInfoB.GetList(System.Int32)">
            <summary>
            获取任务列表
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>任务列表</returns>
        </member>
        <member name="T:PM.DAL.DAL_paperB">
            <summary>
            报纸信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperB.#ctor">
            <summary>
            报纸信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperB.GetModel(System.Int32)">
            <summary>
            获取一个报纸信息实体
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>一个报纸信息实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.GetList(System.String)">
            <summary>
            获取报报纸信息列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>报纸信息列表</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.Add(PM.Model.MDL_paperB)">
            <summary>
            添加报纸信息
            </summary>
            <param name="model">报纸信息类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.Update(PM.Model.MDL_paperB)">
            <summary>
            修改报纸信息,返回所影响的行数
            </summary>
            <param name="model">报纸信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.Updateactive(System.Int32,System.Int32)">
            <summary>
            启用或禁用报纸
            </summary>
            <param name="active">是否有效  1：代表有效   0：代表无效</param>
            <param name="paperID">报纸ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.Delete(System.Int32)">
            <summary>
            删除报纸信息,返回所影响的行数
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.HaspaperID(System.Int32)">
            <summary>
            检测是否已存在报纸ID
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>true存在,false不存在</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperB.HaspaperName(System.Int32,System.String)">
            <summary>
            检测是否已存在报纸名称
            </summary>
            <param name="paperID">报纸ID</param>
            <param name="paperName">报纸名称</param>
            <returns>true存在,false不存在</returns>
        </member>
        <member name="T:PM.DAL.DAL_paperFirstBMB">
            <summary>
            报纸首版信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperFirstBMB.GetModel(System.Int64)">
            <summary>
            获取一个报纸首版信息表实体
            </summary>
            <param name="paperFirstBMID">记录ID</param>
            <returns>报纸首版信息表实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperFirstBMB.GetMaxNewID(System.Int32)">
            <summary>
            获取一个报纸最新一期首版信息记录ID(小于0说明没有数据)
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>报纸首版信息表实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperFirstBMB.Add(PM.Model.MDL_paperFirstBMB)">
            <summary>
            添加报纸首版信息
            </summary>
            <param name="model">报纸首版信息表实体</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperFirstBMB.Update(PM.Model.MDL_paperFirstBMB)">
            <summary>
            修改报纸首版信息
            </summary>
            <param name="model">报纸首版信息表实体</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperFirstBMB.Delete(System.Int64)">
            <summary>
            删除报纸首版信息表实体
            </summary>
            <param name="paperFirstBMID">记录ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="T:PM.DAL.DAL_paperNewBMB">
            <summary>
            报纸最新版面信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperNewBMB.GetModel(System.Int64)">
            <summary>
            获取一个报纸最新版面信息表实体
            </summary>
            <param name="paperNewBMID">记录ID</param>
            <returns>报纸最新版面信息表实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperNewBMB.Add(PM.Model.MDL_paperNewBMB)">
            <summary>
            添加报纸最新版面信息
            </summary>
            <param name="model">报纸最新版面信息表实体</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperNewBMB.Update(PM.Model.MDL_paperNewBMB)">
            <summary>
            修改报纸最新版面信息
            </summary>
            <param name="model">报纸最新版面信息表实体</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperNewBMB.Delete(System.Int64)">
            <summary>
            删除报纸最新版面信息
            </summary>
            <param name="paperNewBMID">记录ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperNewBMB.DeleteWithPaperID(System.Int32)">
            <summary>
             删除报纸最新版面信息(根据报纸ID)
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="T:PM.DAL.DAL_NetworkMonitoring">
            <summary>
            用于外网监测操作数据库的类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_NetworkMonitoring.ExcuteSqlReturnInt(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行insert/update/delete sql语句或者存储过程
            </summary>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="type">命令类型 sql语句还是存储过程</param>
            <param name="pars">参数</param>
            <returns>int</returns>
        </member>
        <member name="M:PM.DAL.DAL_NetworkMonitoring.SelectSqlReturnObject(System.String,System.Data.CommandType,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询 sql语句或者存储过程 返回一个对象（一条记录）
            </summary>
            <param name="cmdText">sql语句或存储过程</param>
            <param name="type">命令类型 sql语句还是存储过程</param>
            <param name="pars">参数</param>
            <returns>object</returns>
        </member>
        <member name="T:PM.DAL.DAL_paperTypeB">
            <summary>
            报纸分类表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.#ctor">
            <summary>
            报纸分类表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.GetModel(System.Int32)">
            <summary>
            获取一个报纸分类实体
            </summary>
            <param name="paperTypeID">报纸分类ID</param>
            <returns>一个报纸分类实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.GetList(System.String)">
            <summary>
            获取报纸分类列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>报纸分类列表</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.Add(PM.Model.MDL_paperTypeB)">
            <summary>
            添加报纸分类,返回所影响的行数
            </summary>
            <param name="model">报纸分类类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.Update(PM.Model.MDL_paperTypeB)">
            <summary>
            修改报纸分类,返回所影响的行数
            </summary>
            <param name="model">报纸分类类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.Delete(System.Int32)">
            <summary>
            删除报纸分类,返回所影响的行数
            </summary>
            <param name="paperTypeID">报纸分类ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.GetpaperTypeID(System.Int32)">
            <summary>
            获取子节点
            </summary>
            <param name="paterPaperTypeID">根节点ID</param>
            <returns>子节点ID表</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.GetpaterPaperTypeID">
            <summary>
            获取根节点
            </summary>
            <returns>根节点表</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperTypeB.GetpaperType">
            <summary>
            获取报纸分类信息
            </summary>
            <returns>报纸分类信息</returns>
        </member>
        <member name="T:PM.DAL.DAL_convergePaperB">
            <summary>
            抓取报纸信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_convergePaperB.#ctor">
            <summary>
            抓取报纸信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_convergePaperB.GetModel(System.Int32)">
            <summary>
            获取一个抓取报纸信息实体
            </summary>
            <param name="paperID">报纸ID</param>
            <returns>一个抓取报纸信息实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergePaperB.GetList(System.String)">
            <summary>
            获取抓取报纸信息列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>抓取报纸信息表</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergePaperB.Add(PM.Model.MDL_convergePaperB)">
            <summary>
            添加抓取报纸信息,返回所影响的行数
            </summary>
            <param name="model">抓取报纸信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergePaperB.Update(PM.Model.MDL_convergePaperB)">
            <summary>
            修改抓取报纸信息,返回所影响的行数
            </summary>
            <param name="model">抓取报纸信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergePaperB.Delete(System.Int32)">
            <summary>
            删除抓取报纸信息,返回所影响的行数
            </summary>
            <param name="paperID">抓取报纸ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="T:PM.DAL.DAL_ArticleInfoB">
            <summary>
            报纸报道信息数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_ArticleInfoB.#ctor">
            <summary>
            报纸报道信息数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_ArticleInfoB.GetModel(System.Int64,System.String)">
            <summary>
            获取一个报纸报道信息实体
            </summary>
            <param name="KID">ID</param>
            <param name="connStr">连接数据库字符串</param>
            <returns>报纸报道信息实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_ArticleInfoB.Add(PM.Model.MDL_ArticleInfoB,System.String)">
            <summary>
            添加报纸报道信息
            </summary>
            <param name="model">报纸报道信息实体</param>
            <param name="connStr">连接数据库字符串</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_ArticleInfoB.update(PM.Model.MDL_ArticleInfoB,System.String)">
            <summary>
            修改报纸报道信息
            </summary>
            <param name="model">报纸报道信息实体</param>
            <param name="connStr">连接数据库字符串</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_ArticleInfoB.Delete(System.Int64,System.String)">
            <summary>
            删除报纸报道信息
            </summary>
            <param name="KID">文章KID</param>
            <param name="connStr">连接数据库字符串</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_ArticleInfoB.Delete(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            删除报纸报道信息
            </summary>
            <param name="KIDStart">要删除文章KID开始</param>
            <param name="KIDEnd">要删除文章KID结果</param>
            <param name="BC">版次</param>
            <param name="connStr"></param>
            <returns></returns>
        </member>
        <member name="T:PM.DAL.DAL_getOverB">
            <summary>
            已抓取信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_getOverB.#ctor">
            <summary>
            已抓取信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_getOverB.GetModel(System.Int32)">
            <summary>
            获取一个已抓取信息表实体
            </summary>
            <param name="orverID">报纸分类ID</param>
            <returns>一个已抓取信息表实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_getOverB.GetList(System.String)">
            <summary>
            获取已抓取信息列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>已抓取信息列表</returns>
        </member>
        <member name="M:PM.DAL.DAL_getOverB.Add(PM.Model.MDL_getOverB)">
            <summary>
            添加已抓取信息,返回所影响的行数
            </summary>
            <param name="model">添加已抓取信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_getOverB.Update(PM.Model.MDL_getOverB)">
            <summary>
            修改已抓取信息,返回所影响的行数
            </summary>
            <param name="model">已抓取信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_getOverB.Delete(System.Int32)">
            <summary>
            删除已抓取信息,返回所影响的行数
            </summary>
            <param name="orverID">已抓取ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="T:PM.DAL.DAL_databaseB">
            <summary>
            数据库信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.#ctor">
            <summary>
            数据库信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.GetModel(System.Int32)">
            <summary>
            获取一个数据库信息实体
            </summary>
            <param name="databaseID">数据库ID</param>
            <returns>一个数据库信息实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.Add(PM.Model.MDL_databaseB)">
            <summary>
            添加数据库信息,返回所影响的行
            </summary>
            <param name="model">数据库信息类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.Update(PM.Model.MDL_databaseB)">
            <summary>
            修改数据库信息,返回所影响的行
            </summary>
            <param name="model">数据库信息类</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.Delete(System.Int32)">
            <summary>
            删除数据库信息
            </summary>
            <param name="databaseID">数据库ID</param>
            <returns>所影响的行</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.Hasdatabase(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            检测该时间段内是否有库
            </summary>
            <param name="databaseID">数据库ID</param>
            <param name="beginTime">开始运行时间</param>
            <param name="endTime">结束运行时间</param>
            <returns>true存在,false不存在</returns>
        </member>
        <member name="M:PM.DAL.DAL_databaseB.HasdatabaseName(System.Int32,System.String)">
            <summary>
            检测是否已存在数据库名称
            </summary>
            <param name="databaseID">数据库ID</param>
            <param name="databaseName">服务器名称</param>
            <returns>true存在,false不存在</returns>
        </member>
        <member name="T:PM.DAL.DAL_convergeServerB">
            <summary>
            抓取服务器信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_convergeServerB.#ctor">
            <summary>
            抓取服务器信息表数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_convergeServerB.GetModel(System.String)">
            <summary>
            获取一个抓取服务器实体
            </summary>
            <param name="convergeServerID">抓取服务器ID</param>
            <returns>一个抓取服务器实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergeServerB.GetList(System.String)">
            <summary>
            获取抓取服务器信息列表
            </summary>
            <param name="strWhere">筛选条件,若为""，则查询所有</param>
            <returns>抓取服务器信息表</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergeServerB.Add(PM.Model.MDL_convergeServerB)">
            <summary>
            添加抓取服务器信息,返回所影响的行数
            </summary>
            <param name="model">抓取服务器信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergeServerB.Update(PM.Model.MDL_convergeServerB)">
            <summary>
            修改抓取服务器信息,返回所影响的行数
            </summary>
            <param name="model">抓取服务器信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_convergeServerB.Delete(System.String)">
            <summary>
            删除抓取服务器信息,返回所影响的行数
            </summary>
            <param name="convergeServerID">抓取服务器ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="T:PM.DAL.DAL_paperInsertInfoB">
            <summary>
            报纸入库信息数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperInsertInfoB.#ctor">
            <summary>
            报纸入库信息数据访问类
            </summary>
        </member>
        <member name="M:PM.DAL.DAL_paperInsertInfoB.GetModel(System.Int32)">
            <summary>
            获取一个报纸入库信息实体
            </summary>
            <param name="paperInsertInfoID">报纸入库信息ID</param>
            <returns>报纸入库信息实体</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperInsertInfoB.Add(PM.Model.MDL_paperInsertInfoB)">
            <summary>
            添加报纸入库信息
            </summary>
            <param name="model">报纸入库信息类</param>
            <returns>当前添加信息的报纸入库信息ID</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperInsertInfoB.Update(PM.Model.MDL_paperInsertInfoB)">
            <summary>
            修改报纸入库信息,返回所影响的行数
            </summary>
            <param name="model">报纸入库信息类</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperInsertInfoB.Delete(System.Int32)">
            <summary>
            删除报纸入库信息,返回所影响的行数
            </summary>
            <param name="paperInsertInfoID">报纸入库信息ID</param>
            <returns>所影响的行数</returns>
        </member>
        <member name="M:PM.DAL.DAL_paperInsertInfoB.DeleteBypaperID(System.Int32,System.Int32)">
            <summary>
            传入报纸ID和日期删除报纸入库信息
            </summary>
            <param name="paperID">报纸入库信息ID</param>
            <param name="RQ">报纸入库信息ID</param>
            <returns>所影响的行数</returns>
        </member>
    </members>
</doc>
